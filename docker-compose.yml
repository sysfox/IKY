version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: iky-db
    environment:
      POSTGRES_DB: ${DB_NAME:-iky}
      POSTGRES_USER: ${DB_USER:-iky_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-iky_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/migrations:/docker-entrypoint-initdb.d:ro
    ports:
      - "${DB_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-iky_user}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: iky-server
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: ${PORT:-3000}
      HOST: ${HOST:-0.0.0.0}
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${DB_NAME:-iky}
      DB_USER: ${DB_USER:-iky_user}
      DB_PASSWORD: ${DB_PASSWORD:-iky_password}
      DB_POOL_MIN: ${DB_POOL_MIN:-2}
      DB_POOL_MAX: ${DB_POOL_MAX:-10}
      API_PREFIX: ${API_PREFIX:-/api/v1}
      CORS_ORIGIN: ${CORS_ORIGIN:-*}
      MATCH_CONFIDENCE_THRESHOLD: ${MATCH_CONFIDENCE_THRESHOLD:-0.75}
      DEVICE_CHANGE_THRESHOLD: ${DEVICE_CHANGE_THRESHOLD:-0.5}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      RATE_LIMIT_WINDOW_MS: ${RATE_LIMIT_WINDOW_MS:-900000}
      RATE_LIMIT_MAX_REQUESTS: ${RATE_LIMIT_MAX_REQUESTS:-100}
    ports:
      - "${PORT:-3000}:3000"
    volumes:
      - ./server/logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/v1/health', (r) => r.statusCode === 200 ? process.exit(0) : process.exit(1))"]
      interval: 30s
      timeout: 3s
      start_period: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
