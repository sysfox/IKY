name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [22.x]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.15.0
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v5
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
          cache-dependency-path: |
            client/pnpm-lock.yaml
            server/pnpm-lock.yaml
      
      - name: Install dependencies (Client)
        run: |
          cd client
          pnpm install --frozen-lockfile
      
      - name: Install dependencies (Server)
        run: |
          cd server
          pnpm install --frozen-lockfile
      
      - name: Lint Client
        run: |
          cd client
          pnpm run lint
      
      - name: Lint Server
        run: |
          cd server
          pnpm run lint
      
      - name: Test Client
        run: |
          cd client
          pnpm run test:coverage
      
      - name: Test Server
        run: |
          cd server
          pnpm run test
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./client/coverage/lcov.info,./server/coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.15.0
      
      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: 22.x
          cache: 'pnpm'
          cache-dependency-path: |
            client/pnpm-lock.yaml
            server/pnpm-lock.yaml
      
      - name: Install dependencies
        run: |
          cd client && pnpm install --frozen-lockfile
          cd ../server && pnpm install --frozen-lockfile
      
      - name: Run security audit (Client)
        run: |
          cd client
          pnpm audit --audit-level=moderate || true
      
      - name: Run security audit (Server)
        run: |
          cd server
          pnpm audit --audit-level=moderate || true
      
      - name: Check for vulnerabilities with npm audit
        run: |
          cd server
          pnpm audit --json > audit-results.json || true
          cat audit-results.json

  database-test:
    name: Database Integration Test
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: iky_test
          POSTGRES_USER: iky_test
          POSTGRES_PASSWORD: test_password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup PostgreSQL client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client
      
      - name: Run database migrations
        env:
          PGHOST: localhost
          PGPORT: 5432
          PGDATABASE: iky_test
          PGUSER: iky_test
          PGPASSWORD: test_password
        run: |
          psql -f database/migrations/001_initial_schema.sql
      
      - name: Verify database schema
        env:
          PGHOST: localhost
          PGPORT: 5432
          PGDATABASE: iky_test
          PGUSER: iky_test
          PGPASSWORD: test_password
        run: |
          psql -c "\dt" | grep user_identities
          psql -c "\dt" | grep user_device_profiles
          psql -c "\dt" | grep device_change_history
          psql -c "\dt" | grep identity_matching_logs

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint-and-test, security-audit]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.15.0
      
      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: 22.x
          cache: 'pnpm'
          cache-dependency-path: |
            client/pnpm-lock.yaml
            server/pnpm-lock.yaml
      
      - name: Install dependencies (Client)
        run: |
          cd client
          pnpm install --frozen-lockfile
      
      - name: Build Client
        run: |
          cd client
          pnpm run build
      
      - name: Archive build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: client-dist
          path: client/dist
          retention-days: 7
